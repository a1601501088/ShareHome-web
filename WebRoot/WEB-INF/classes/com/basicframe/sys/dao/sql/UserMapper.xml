<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.basicframe.sys.dao.UserMapper">

	
	<!-- 插入 -->
	<insert id="insert" parameterType="user">
		insert into sys_user (user_id, user_name, password, real_name, sex, birthday, departments, duties, 
		email, office_phone, home_phone, mobile_phone, status, create_time, last_login_time, last_login_ip,login_times) 
		values (#{userId}, #{userName}, #{password}, #{realName}, #{sex}, #{birthday}, #{departments}, #{duties}, 
		#{email}, #{officePhone}, #{homePhone}, #{mobilePhone}, #{status}, #{createTime}, #{lastLoginTime,jdbcType=VARCHAR}, #{lastLoginIP}, #{loginTimes})
		<selectKey resultType="int" keyProperty="userId" order="BEFORE">
			select seq_user_id.nextval from dual
		</selectKey>
	</insert>
	
	<!-- 更新 -->
	<update id="update" parameterType="user">
		update sys_user set real_name = #{realName}, sex = #{sex}, birthday = #{birthday}, departments = #{departments}, duties = #{duties}, 
		email = #{email}, office_phone = #{officePhone}, home_phone = #{homePhone}, mobile_phone = #{mobilePhone} where user_id = #{userId}
	</update>
	
	<!-- 登陆时更新 -->
	<update id="updateLogin" parameterType="user">
		update sys_user set last_login_time = #{lastLoginTime}, last_login_ip = #{lastLoginIP}, login_times = login_times+1 where user_id = #{userId}
	</update>
	
	<!-- 更新密码 -->
	<update id="updatePassword" parameterType="user">
		update sys_user set password=#{password} where user_id = #{userId}
	</update>
	
	<!-- 更新状态 -->
	<update id="updateStatus" parameterType="user">
		update sys_user set status = #{status} where user_id = #{userId}
	</update>
	
	<!-- 登陆 -->
	<select id="login" parameterType="com.basicframe.sys.model.User" resultType="com.basicframe.sys.model.User">
		select * from sys_user where user_name = #{userName} and password = #{password}
	</select>
	
	<!-- 根据ID查询 -->
	<select id="selectById" parameterType="int" resultType="user">
		select * from sys_user where user_id = #{userId}
	</select>
	
	<!-- 根据名称查询 -->
	<select id="selectByName" parameterType="String" resultType="user">
		select * from sys_user where user_name = #{userName}
	</select>
	
	<!-- 根据姓名查询 -->
	<select id="selectByRealName" parameterType="String" resultType="user">
		select * from sys_user where real_name = #{realName}
	</select>
	
	<!-- 分页查询 -->
	<select id="selectPageList" parameterType="Map" resultType="user">
		select * from 
			(select a.*, rownum rn from
				(select b.* from sys_user b
					<where>
						<if test="userName != null">b.user_name like #{userName}</if>
					</where>
					order by b.create_time) a
			where rownum &lt;= #{endRow}) c
		where c.rn &gt;= #{startRow}
	</select>
	
	<!-- 分页查询总条数 -->
	<select id="selectTotalRows" parameterType="Map" resultType="int">
		select count(*) from sys_user
		<where>
			<if test="userName != null">user_name like #{userName}</if>
		</where>
	</select>

</mapper>